<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	<mapper namespace="com.cafe24.epm.mapper.UnpaidMapper">
		<resultMap type="Unpaid" id="unpaidSelect">
			<result property="unpaidCode" column="unpaid_code"/>
			<result property="unpaidExpDate" column="unpaid_exp_date"/>
			<result property="unpaidPart" column="unpaid_part"/>
			<result property="unpaidSubName" column="unpaid_sub_name"/>
			<result property="unpaidDesc" column="unpaid_desc"/>
			<result property="customerCode" column="customer_code"/>
			<result property="customerName" column="customer_name"/>
			<result property="customerTel" column="customer_tel"/>
			<result property="unpaidMemo" column="unpaid_memo"/>
			<result property="unpaidStatus" column="unpaid_status"/>
			<result property="unpaidProDate" column="unpaid_pro_date"/>
			<result property="unpaidProStaffCode" column="unpaid_pro_staff_code"/>
			<result property="unpaidProMemberName" column="unpaid_pro_member_name"/>
			<result property="unpaidProStoreName" column="unpaid_pro_store_name"/>
			<result property="unpaidRegDate" column="unpaid_reg_date"/>
			<result property="unpaidRegStaffCode" column="unpaid_reg_staff_code"/>
			<result property="unpaidRegMemberName" column="unpaid_reg_member_name"/>
			<result property="unpaidRegStoreName" column="unpaid_Reg_Store_Name"/>
		</resultMap>
		
		<resultMap type="UnpaidT" id="unpaidTselect">
			<result property="unpaidtCode" column="unpaidt_code"></result>
			<result property="unpaidtRegStaffCode" column="unpaidt_reg_staff_code"></result>
			<result property="storeName" column="store_name"></result>
			<result property="staffName" column="staff_name"></result>
			<result property="unpaidtPart" column="unpaidt_part"></result>
			<result property="customerName" column="customer_name"></result>
			<result property="customerTel" column="customer_tel"></result>
			<result property="unpaidtDesc" column="unpaidt_desc"></result>
			<result property="unpaidtRegDate" column="unpaidt_reg_date"></result>
			<result property="unpaidtMemo" column="unpaidt_memo"></result>
		</resultMap>
		
		<!-- 처리업무 이력 삭제 -->
		<delete id="unpaidTDelete" parameterType="String">
			DELETE
				FROM 
					tb_unpaidt
				<where>
					<if test="unpaidtCode != null and unpaidtCode != ''.toString() ">unpaidt_code = #{unpaidtCode}</if>
				</where>
		</delete>
		
		<!-- 처리업무 이력 리스트 -->
		<select id="unpaidTList" parameterType="UnpaidT" resultMap="unpaidTselect" >
			SELECT
				u.unpaidt_code AS 'unpaidt_code'
				, u.unpaidt_reg_staff_code AS 'unpaidt_reg_staff_code'
				, sr.store_name AS 'store_name'
				, m.member_name AS 'staff_name'
				, u.unpaidt_part AS 'unpaidt_part'
				, u.customer_name AS 'customer_name'
				, u.customer_tel AS 'customer_tel'
				, u.unpaidt_desc AS 'unpaidt_desc'
				, u.unpaidt_reg_date AS 'unpaidt_reg_date'
				, u.unpaidt_memo AS 'unpaidt_memo'
			FROM
				tb_unpaidt AS u
				join
				tb_staff AS s
				on
				u.unpaidt_reg_staff_code = s.staff_code
				join
				tb_member AS m
				on
				s.member_id = m.member_id
				join
				tb_store AS sr
				on
				s.store_code = sr.store_code
		</select>
		
		<!-- 처리업무삭제 -->
		<delete id="unpaidDelete" parameterType="String">
			DELETE
				FROM tb_unpaid
				<where>
					<if test="unpaidCode != null and unpaidCode !=''.toString()">unpaid_code=#{unpaidCode}</if>
				</where>
		</delete>
		
		
		<!-- 처리업무수정 -->
		<update id="unpaidUpdate" parameterType="String">
			<selectKey order="BEFORE" keyProperty="customerCode" resultType="String">
				SELECT 
					IFNULL(
								(SELECT
									customer_code
								from
									tb_customer
								where
									#{customerName} = customer_name
									and
									#{customerTel} = customer_tel)
									
								, NULL
								
							) AS customerCode				
			</selectKey>
			UPDATE tb_unpaid
				SET
					unpaid_part = #{unpaidPart},
					customer_code = #{customerCode},
					customer_name = #{customerName},
					customer_tel = #{customerTel},
					unpaid_memo = #{unpaidMemo}
				WHERE 
					unpaid_code = #{unpaidCode}		
		</update>
		
		
		<!-- 처리업무 완료처리 -->
		<update id="unpaidPro" parameterType="String">
			<selectKey order="BEFORE" keyProperty="unpaidProStaffCode" resultType="String">
				SELECT
					sf.staff_code AS unpaidProStaffCode
					FROM
					tb_staff AS sf
					WHERE 
					sf.member_id = (SELECT
												member_id
												FROM 
												tb_member
												WHERE 
											 	member_name = #{unpaidProMemberName})
					
					AND 
					sf.store_code = (SELECT
												store_code
												FROM 
												tb_store
												WHERE 
												store_name = #{unpaidProStoreName})

			</selectKey>
			UPDATE tb_unpaid
				SET
					unpaid_status = '해결'
					,unpaid_pro_staff_code = #{unpaidProStaffCode}
					,unpaid_pro_date = now()
				WHERE 
					unpaid_code = #{unpaidCode}
		</update>
		
		
		<!-- 처리업무 등록 -->
		<insert id="unpaidInsert" parameterType="Unpaid">
		
			<!-- unpaidCode -->
			<selectKey order="BEFORE" keyProperty="unpaidCode,customerCode,unpaidRegStaffCode" resultType="Map">
				select
				(case count(*)
				when 0 then 'unpaid_1'
				else CONCAT('unpaid_',max(cast(substring(unpaid_code,8) as decimal))+1)
				end) as unpaidCode
				, sf.staff_code AS unpaidRegStaffCode
				, sf.customer_code AS customerCode
			from
				tb_unpaid
				,(
					SELECT
						sf.staff_code
						, c.customer_code
					from
						tb_staff as sf
						join
						tb_member as m
						on
						sf.member_id = m.member_id
						join
						tb_store AS sr
						on
						sf.store_code =sr.store_code
						,(
								SELECT 
									ifnull(
											(SELECT
												customer_code
											from
												tb_customer
											where
												#{customerName} = customer_name
												and
												#{customerTel} = customer_tel), NULL) AS customer_code
								
							)AS c
						
					where
						#{unpaidRegMemberName} = m.member_name
						and
						#{unpaidRegStoreName} = sr.store_name	
					) AS sf
			</selectKey>

			INSERT INTO tb_unpaid
				(unpaid_code
				, unpaid_exp_date
				, unpaid_part
				, unpaid_sub_name
				, unpaid_desc
				, customer_code
				, customer_name
				, customer_tel
				, unpaid_memo
				, unpaid_status
				, unpaid_reg_date
				, unpaid_reg_staff_code)
			VALUES 
				(#{unpaidCode}
				, NOW()
				, #{unpaidPart}
				, #{unpaidSubName}
				, #{unpaidDesc}
				, #{customerCode}
				, #{customerName}
				, #{customerTel}
				, #{unpaidMemo}
				, #{unpaidStatus}
				, NOW()
				, #{unpaidRegStaffCode})

		</insert>
		
		
		<!-- 처리업무선택 -->
		<select id="unpaidSelect" parameterType="Unpaid" resultMap="unpaidSelect">
	SELECT
					u.unpaid_code AS 'unpaid_code'
					, u.unpaid_exp_date AS 'unpaid_exp_date'
					, u.unpaid_part AS 'unpaid_part'
					, u.unpaid_sub_name AS 'unpaid_sub_name'
					, u.unpaid_desc AS 'unpaid_desc'
					, c.customer_code AS 'customer_code'
					, u.customer_name AS 'customer_name'
					, u.customer_tel AS 'customer_tel'
					, u.unpaid_memo AS 'unpaid_memo'
					, u.unpaid_status AS 'unpaid_status'
					, u.unpaid_pro_date AS 'unpaid_pro_date'
					, s1.staff_code AS 'unpaid_pro_staff_code'
					, st1.store_name AS 'unpaid_pro_store_name'
					, m1.member_name AS 'unpaid_pro_member_name'
					, u.unpaid_reg_date AS 'unpaid_reg_date'
					, u.unpaid_reg_staff_code AS 'staff_reg_staff_code'
					, m2.member_name AS 'unpaid_reg_member_name'
					, s2.store_code AS 'unpaid_Reg_Store_Code'
					, st2.store_name AS 'unpaid_Reg_Store_Name'
				FROM
					tb_unpaid as u
				
					left outer JOIN
					tb_staff AS s1
					ON
					s1.staff_code = u.unpaid_pro_staff_code
					
					JOIN
					tb_staff AS s2
					on
					s2.staff_code = u.unpaid_reg_staff_code
					
					left OUTER JOIN
					tb_member AS m1
					ON
					s1.member_id = m1.member_id
					
					JOIN
					tb_member AS m2
					ON
					s2.member_id = m2.member_id
					
					left outer JOIN
					tb_customer AS c
					ON
					u.customer_name = c.customer_name
					
					left OUTER JOIN
					tb_store AS  st1
					ON
					st1.store_code = s1.store_code
					
					join
					tb_store AS st2
					on
					st2.store_code = s2.store_code

			WHERE
				unpaid_code = #{unpaidCode}

			ORDER BY unpaid_reg_date

		</select>
		
			<!-- 처리완료(처리직원, 날짜가 있을 때) -->
		<select id="unpaidList" parameterType="Unpaid" resultMap="unpaidSelect">
				SELECT
					u.unpaid_code AS 'unpaid_code'
					, u.unpaid_exp_date AS 'unpaid_exp_date'
					, u.unpaid_part AS 'unpaid_part'
					, u.unpaid_sub_name AS 'unpaid_sub_name'
					, u.unpaid_desc AS 'unpaid_desc'
					, c.customer_code AS 'customer_code'
					, u.customer_name AS 'customer_name'
					, u.customer_tel AS 'customer_tel'
					, u.unpaid_memo AS 'unpaid_memo'
					, u.unpaid_status AS 'unpaid_status'
					, u.unpaid_pro_date AS 'unpaid_pro_date'
					, s1.staff_code AS 'unpaid_pro_staff_code'
					, st1.store_name AS 'unpaid_pro_store_name'
					, m1.member_name AS 'unpaid_pro_member_name'
					, u.unpaid_reg_date AS 'unpaid_reg_date'
					, u.unpaid_reg_staff_code AS 'staff_reg_staff_code'
					, m2.member_name AS 'unpaid_reg_member_name'
					, s2.store_code AS 'unpaid_Reg_Store_Code'
					, st2.store_name AS 'unpaid_Reg_Store_Name'
				FROM
					tb_unpaid as u
				
					left outer JOIN
					tb_staff AS s1
					ON
					s1.staff_code = u.unpaid_pro_staff_code
					
					JOIN
					tb_staff AS s2
					on
					s2.staff_code = u.unpaid_reg_staff_code
					
					left OUTER JOIN
					tb_member AS m1
					ON
					s1.member_id = m1.member_id
					
					JOIN
					tb_member AS m2
					ON
					s2.member_id = m2.member_id
					
					left outer JOIN
					tb_customer AS c
					ON
					u.customer_name = c.customer_name
					
					left OUTER JOIN
					tb_store AS  st1
					ON
					st1.store_code = s1.store_code
					
					join
					tb_store AS st2
					on
					st2.store_code = s2.store_code
				
				ORDER BY unpaid_reg_date		
		</select>
		
	</mapper>