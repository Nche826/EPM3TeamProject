<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	<mapper namespace="com.cafe24.epm.mapper.UnpaidMapper">
		<resultMap type="Unpaid" id="unpaidSelect">
			<result property="unpaidCode" column="unpaid_code"/>
			<result property="unpaidExpDate" column="unpaid_exp_date"/>
			<result property="unpaidPart" column="unpaid_part"/>
			<result property="unpaidSubName" column="unpaid_sub_name"/>
			<result property="unpaidDesc" column="unpaid_desc"/>
			<result property="customerCode" column="customer_code"/>
			<result property="customerName" column="customer_name"/>
			<result property="customerTel" column="customer_tel"/>
			<result property="unpaidMemo" column="unpaid_memo"/>
			<result property="unpaidStatus" column="unpaid_status"/>
			<result property="unpaidProDate" column="unpaid_pro_date"/>
			<result property="unpaidProStaffCode" column="unpaid_pro_staff_code"/>
			<result property="unpaidProMemberName" column="unpaid_pro_member_name"/>
			<result property="unpaidProStoreName" column="unpaid_pro_store_name"/>
			<result property="unpaidRegDate" column="unpaid_reg_date"/>
			<result property="unpaidRegStaffCode" column="unpaid_reg_staff_code"/>
			<result property="unpaidRegMemberName" column="unpaid_reg_member_name"/>
			<result property="unpaidRegStoreName" column="unpaid_Reg_Store_Name"/>
		</resultMap>
		
		<!-- 처리업무 등록 -->
		<insert id="unpaidInsert" parameterType="Unpaid">
		
			<!-- unpaidCode -->
			<selectKey order="BEFORE" keyProperty="unpaidCode,customerCode,unpaidRegStaffCode" resultType="Map">
				select
					(case count(*)
					 when 0 then 'unpaid_1'
					 else CONCAT('unpaid_',max(cast(substring(unpaid_code,8) as decimal))+1)
					 end) as unpaidCode
					 ,tc.customer_code as customerCode
					 ,tc.staff_code as unpaidRegStaffCode
				from
					tb_unpaid AS u ,(
									SELECT
										c.customer_code,
										tf.staff_code
									from
										tb_customer AS c,
										(
										SELECT
										sf.staff_code
										from
											tb_staff as sf
											join
											tb_member as m
											on
											sf.member_id = m.member_id
											join
											tb_store AS sr
											on
											sf.store_code =sr.store_code
										where
											#{unpaidRegMemberName} = m.member_name
											and
											#{unpaidRegStoreName} = sr.store_name
						
											)AS tf
				where
					#{customerName} = c.customer_name
					and
					#{customerTel} = c.customer_tel
					)AS tc
			</selectKey>

			INSERT INTO tb_unpaid
				(unpaid_code
				, unpaid_exp_date
				, unpaid_part
				, unpaid_sub_name
				, unpaid_desc
				, customer_code
				, unpaid_memo
				, unpaid_status
				, unpaid_reg_date
				, unpaid_reg_staff_code)
			VALUES 
				(#{unpaidCode}
				, NOW()
				, #{unpaidPart}
				, #{unpaidSubName}
				, #{unpaidDesc}
				, #{customerCode}
				, #{unpaidMemo}
				, #{unpaidStatus}
				, NOW()
				, #{unpaidRegStaffCode})

		</insert>
		
		
		<!-- 처리업무선택 -->
		<select id="unpaidSelect" parameterType="Unpaid" resultMap="unpaidSelect">
		SELECT
				u.unpaid_code AS 'unpaid_code'
				, u.unpaid_exp_date AS 'unpaid_exp_date'
				, u.unpaid_part AS 'unpaid_part'
				, u.unpaid_sub_name AS 'unpaid_sub_name'
				, u.unpaid_desc AS 'unpaid_desc'
				, u.customer_code AS 'customer_code'
				, c.customer_name AS 'customer_name'
				, c.customer_tel AS 'customer_tel'
				, u.unpaid_memo AS 'unpaid_memo'
				, u.unpaid_status AS 'unpaid_status'
				, u.unpaid_pro_date AS 'unpaid_pro_date'
				, u.unpaid_pro_staff_code AS 'unpaid_pro_staff_code'
				, st1.store_name AS 'unpaid_pro_store_name'
				, m1.member_name AS 'unpaid_pro_member_name'
				, u.unpaid_reg_date AS 'unpaid_reg_date'
				, u.unpaid_reg_staff_code AS 'unpaid_reg_staff_code'
				, m2.member_name AS 'unpaid_reg_member_name'
				, s2.store_code AS 'unpaid_Reg_Store_Code'
				, st2.store_name AS 'unpaid_Reg_Store_Name'
			FROM
				tb_unpaid as u
				
				JOIN  
				tb_staff AS s1
				ON 
				s1.staff_code = u.unpaid_pro_staff_code
				
				JOIN 
				tb_staff AS s2
				on
				s2.staff_code = u.unpaid_reg_staff_code
				
				JOIN
				tb_member AS m1
				ON
				s1.member_id = m1.member_id
				
				JOIN 
				tb_member AS m2
				ON
				s2.member_id = m2.member_id
				
				JOIN
				tb_customer AS c
				ON
				u.customer_code = c.customer_code
				
				JOIN 
				tb_store AS  st1
				ON 
				st1.store_code = s1.store_code
				
				join
				tb_store AS st2
				on
				st2.store_code = s2.store_code

			WHERE
				unpaid_code = #{unpaidCode}

			ORDER BY unpaid_reg_date

		</select>
		
			<!-- 처리완료(처리직원, 날짜가 있을 때) -->
		<select id="unpaidList" parameterType="Unpaid" resultMap="unpaidSelect">
				SELECT
					u.unpaid_code AS 'unpaid_code'
					, u.unpaid_exp_date AS 'unpaid_exp_date'
					, u.unpaid_part AS 'unpaid_part'
					, u.unpaid_sub_name AS 'unpaid_sub_name'
					, u.unpaid_desc AS 'unpaid_desc'
					, u.customer_code AS 'customer_code'
					, c.customer_name AS 'customer_name'
					, c.customer_tel AS 'customer_tel'
					, u.unpaid_memo AS 'unpaid_memo'
					, u.unpaid_status AS 'unpaid_status'
					, u.unpaid_pro_date AS 'unpaid_pro_date'
					, s1.staff_code AS 'unpaid_pro_staff_code'
					, st1.store_name AS 'unpaid_pro_store_name'
					, m1.member_name AS 'unpaid_pro_member_name'
					, u.unpaid_reg_date AS 'unpaid_reg_date'
					, u.unpaid_reg_staff_code AS 'staff_reg_staff_code'
					, m2.member_name AS 'unpaid_reg_member_name'
					, s2.store_code AS 'unpaid_Reg_Store_Code'
					, st2.store_name AS 'unpaid_Reg_Store_Name'
				FROM
					tb_unpaid as u
				
					left outer JOIN
					tb_staff AS s1
					ON
					s1.staff_code = u.unpaid_pro_staff_code
					
					JOIN
					tb_staff AS s2
					on
					s2.staff_code = u.unpaid_reg_staff_code
					
					left OUTER JOIN
					tb_member AS m1
					ON
					s1.member_id = m1.member_id
					
					JOIN
					tb_member AS m2
					ON
					s2.member_id = m2.member_id
					
					JOIN
					tb_customer AS c
					ON
					u.customer_code = c.customer_code
					
					left OUTER JOIN
					tb_store AS  st1
					ON
					st1.store_code = s1.store_code
					
					join
					tb_store AS st2
					on
					st2.store_code = s2.store_code
				
				ORDER BY unpaid_reg_date		
		</select>
		
	</mapper>